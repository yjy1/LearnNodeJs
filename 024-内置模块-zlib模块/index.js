function test(){
    console.log(`stream是Node.js提供的又一个仅在服务区端可用的模块，目的是支持流”这种数据结构。
    什么是流?流是一种抽象的数据结构。想象水流，当在水管中流动时，就可以从某个地方(例如自来水厂)源源不断地到达另一个地方(比如你家的洗手池》。我们也可以把数据看成是数据流，比如你敲键盘的时候，就可以把每个字符依次连起来，看成字符流。这个流是从键盘输入到应用程序，实际上它还对应着一个名字:标准输入流(stdin) 。

    如果应用程序把字符一个一个输出到显示器上，这也可以看成是一个流，这个流也有名字:标准输出流(stdout)。流的特点是数据是有序的，而且必须依次读取，或者依次写入，不能像Array那样随机定位。

    有些流用来读取数据，比如从文件读取数据时，可以打开一个文件流，然后从文件流中不断地读取数据。有些流用来写入数据，比如何文件写入数据时，只需要把数据不断地往文件流中写进去就可以了。

    在Node.js中，流也是一个对象，我们只需要响应流的事件就可以了: data 事件表示流的数据已经可以读取了end事件表示这个流已经到末尾了，没有数据可以读取了，error事件表示出错了。
        var fs = require('fs'):
        // 打开一个流:
        var rs = fs.createReadstream('sample.txt','utf-8');
        rs.on('data'，function (chunk) {
            console.1og('DATA:')
            console.1og(chunk);
        })

        rs.on('end', function () {
            console.1og('END');
        })

        rs.on('error',function (err) {
            console.log('ERROR'+err)
        });
        要注意，data事件可能会有多次，每次传递的chunk是流的一部分数据要以流的形式写入文件，只需要不断调用write()方法，最后以end()结束:
`)
}