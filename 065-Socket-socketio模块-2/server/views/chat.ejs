<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="/javascripts/socketio.js"></script>
</head>

<body>
    <h1>聊天室</h1>
    <h1>当前用户:
        <b id="user"></b>
    </h1>

    <div>
        <input type="text" id="text">
        <button id="send">send</button>
        <select id="select"></select>
    </div>
    <!-- 建立socket连接 带着token,后端验证 -->
    <script>
        var select = document.querySelector("#select")
        var text = document.querySelector("#text")
        var send = document.querySelector("#send")
        var user = document.querySelector("#user")

        user.innerHTML = localStorage.getItem('username')
        const WebSocketType = {
            Error: 0,//错误
            GroupList: 1,
            GroupChat: 2,
            SingleChat: 3
        }

        // 引入 socket.io js端
        const socket = io(`ws://localhost:3001?token=${localStorage.getItem('token')}`) // 默认连接了localhost 

        socket.on(WebSocketType.GroupChat, (data) => {
            var title = data.user ? data.user.username : '广播'
            console.log(title + ' : ' + data.data)
        })

        socket.on(WebSocketType.GroupList, (msg) => {
            // var title = data.user ? data.user.username : '广播'
            // console.log(title + ' : ' + data)

            const onlineList =  msg.data 
            select.innerHTML = ''
            select.innerHTML = `<option value='all'>all</option>` + onlineList.map(item => `
                <option value=${item.username}>${item.username}</option>
            `).join('')

        })

        socket.on(WebSocketType.SingleChat, (data) => {
            var title = data.user ? data.user.username : '广播'
            console.log(title + ' : ' + data.data)
        })

        socket.on(WebSocketType.Error, (data) => {
            localStorage.removeItem('token')
            location.href = '/login'
        })
        send.onclick = () => {
            if (select.value === 'all') {
                // 群发
                // console.log('群发')
                socket.emit(WebSocketType.GroupChat,createMessage(text.value))
            } else {
                // 私聊
                socket.emit(WebSocketType.SingleChat,createMessage(text.value,select.value))
            }
        }


        function createMessage(  data, to) {
            return  {
                data,
                to
            } 
        }

    </script>
</body>

</html>